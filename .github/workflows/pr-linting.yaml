name: Code Linting
on:
  pull_request:
    branches:
        - "main"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  code-linting:
    name: Code Linting
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout code"
        uses: "actions/checkout@v3"
      - name: "Get changed files"
        run: |
          gh pr view ${{ github.event.number }} --json files > changed_files.json
          cat changed_files.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: "Code format"
        run: |
          pip3 install isort pylint black darglint
          find . -name "*.py" -not -path "./tests/*" -exec python3 -m isort {} \; -exec python3 -m black {} \;
      - name: "Docstring linting"
        run: |
          results=$(find . -name "*.py" -not -path "./tests/*" -exec darglint {} \;)
  
          if [[ -z "$results" ]]; then
            echo "All docstrings are valid"
          else
            echo "Invalid docstrings found:"
            echo "$results"
            exit 1
          fi

      - name: "Commit linted files"
        uses: "stefanzweifel/git-auto-commit-action@v4"
        with:
          commit_message: "Linted and formatted files"
      - name: "Code linting"
        run: |
          pip3 install -r requirements.txt
          make lint
